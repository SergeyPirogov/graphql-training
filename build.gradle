plugins {
    id 'java'
    id "io.github.kobylynskyi.graphql.codegen" version "5.2.0"
    id'io.qameta.allure' version '2.8.1'
    id "ru.iopump.qa.allure" version "0.1.2"
}

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.projectlombok:lombok:1.18.18'
    implementation group: 'javax.validation', name: 'validation-api', version: '2.0.1.Final'

    implementation group: 'io.rest-assured', name: 'rest-assured', version: '4.4.0'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.12.3'
    implementation("com.google.guava:guava:30.1.1-jre")
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
}

test {
    useJUnitPlatform()

    systemProperties System.getProperties()
    systemProperties System.getenv()

    testLogging {
        showStandardStreams = true
        events "PASSED", "FAILED", "SKIPPED"
        exceptionFormat = "full"
    }

    test.outputs.upToDateWhen { false }
}

graphqlCodegen {
    graphqlSchemas.includePattern = "schema\\.graphql"
    outputDir = new File("$buildDir/generated")
}

allure {
    version = "2.13.8"
    autoconfigure = true
    aspectjVersion = '1.9.7'
    configuration = 'compile'

    useJUnit5 {
        version = "2.13.8"
    }
}

allureServer {
    relativeResultDir = 'build/allure-results'
    allureServerUrl = 'http://localhost:8080'
}

//test.finalizedBy(allureServerGenerate)